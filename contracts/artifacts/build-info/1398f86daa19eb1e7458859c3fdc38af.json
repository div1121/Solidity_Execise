{
	"id": "1398f86daa19eb1e7458859c3fdc38af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/fallout.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface ICoinFlip {\r\n    function changeOwner(address _owner) external;\r\n}\r\n\r\ncontract CoinFlipGuess {\r\n    uint256 public consecutiveWins = 0;\r\n    uint256 lastHash;\r\n    uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\r\n\r\n    function coinFlipGuess(address _my, address _coinFlipAddr) public returns (uint256) {\r\n        uint256 blockValue = uint256(blockhash(block.number - 1));\r\n\r\n        if (lastHash == blockValue) {\r\n          revert();\r\n        }\r\n\r\n        lastHash = blockValue;\r\n        uint256 coinFlip = blockValue / FACTOR;\r\n        bool side = coinFlip == 1 ? true : false;\r\n\r\n        ICoinFlip(_coinFlipAddr).changeOwner(_my);\r\n        return consecutiveWins;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/fallout.sol": {
				"CoinFlipGuess": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_my",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_coinFlipAddr",
									"type": "address"
								}
							],
							"name": "coinFlipGuess",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/fallout.sol\":140:794  contract CoinFlipGuess {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/fallout.sol\":203:204  0 */\n  0x00\n    /* \"contracts/fallout.sol\":170:204  uint256 public consecutiveWins = 0 */\n  dup1\n  sstore\n    /* \"contracts/fallout.sol\":251:328  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/fallout.sol\":234:328  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/fallout.sol\":140:794  contract CoinFlipGuess {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/fallout.sol\":140:794  contract CoinFlipGuess {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b59565d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/fallout.sol\":337:791  function coinFlipGuess(address _my, address _coinFlipAddr) public returns (uint256) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fallout.sol\":170:204  uint256 public consecutiveWins = 0 */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/fallout.sol\":337:791  function coinFlipGuess(address _my, address _coinFlipAddr) public returns (uint256) {... */\n    tag_8:\n        /* \"contracts/fallout.sol\":412:419  uint256 */\n      0x00\n        /* \"contracts/fallout.sol\":432:450  uint256 blockValue */\n      dup1\n        /* \"contracts/fallout.sol\":486:487  1 */\n      0x01\n        /* \"contracts/fallout.sol\":471:483  block.number */\n      number\n        /* \"contracts/fallout.sol\":471:487  block.number - 1 */\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"contracts/fallout.sol\":461:488  blockhash(block.number - 1) */\n      blockhash\n        /* \"contracts/fallout.sol\":453:489  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"contracts/fallout.sol\":432:489  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"contracts/fallout.sol\":518:528  blockValue */\n      dup1\n        /* \"contracts/fallout.sol\":506:514  lastHash */\n      sload(0x01)\n        /* \"contracts/fallout.sol\":506:528  lastHash == blockValue */\n      sub\n        /* \"contracts/fallout.sol\":502:563  if (lastHash == blockValue) {... */\n      tag_17\n      jumpi\n        /* \"contracts/fallout.sol\":543:551  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/fallout.sol\":502:563  if (lastHash == blockValue) {... */\n    tag_17:\n        /* \"contracts/fallout.sol\":586:596  blockValue */\n      dup1\n        /* \"contracts/fallout.sol\":575:583  lastHash */\n      0x01\n        /* \"contracts/fallout.sol\":575:596  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/fallout.sol\":607:623  uint256 coinFlip */\n      0x00\n        /* \"contracts/fallout.sol\":639:645  FACTOR */\n      sload(0x02)\n        /* \"contracts/fallout.sol\":626:636  blockValue */\n      dup3\n        /* \"contracts/fallout.sol\":626:645  blockValue / FACTOR */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"contracts/fallout.sol\":607:645  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"contracts/fallout.sol\":656:665  bool side */\n      0x00\n        /* \"contracts/fallout.sol\":680:681  1 */\n      0x01\n        /* \"contracts/fallout.sol\":668:676  coinFlip */\n      dup3\n        /* \"contracts/fallout.sol\":668:681  coinFlip == 1 */\n      eq\n        /* \"contracts/fallout.sol\":668:696  coinFlip == 1 ? true : false */\n      tag_20\n      jumpi\n        /* \"contracts/fallout.sol\":691:696  false */\n      0x00\n        /* \"contracts/fallout.sol\":668:696  coinFlip == 1 ? true : false */\n      jump(tag_21)\n    tag_20:\n        /* \"contracts/fallout.sol\":684:688  true */\n      0x01\n        /* \"contracts/fallout.sol\":668:696  coinFlip == 1 ? true : false */\n    tag_21:\n        /* \"contracts/fallout.sol\":656:696  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/fallout.sol\":719:732  _coinFlipAddr */\n      dup5\n        /* \"contracts/fallout.sol\":709:745  ICoinFlip(_coinFlipAddr).changeOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa6f9dae1\n        /* \"contracts/fallout.sol\":746:749  _my */\n      dup8\n        /* \"contracts/fallout.sol\":709:750  ICoinFlip(_coinFlipAddr).changeOwner(_my) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/fallout.sol\":768:783  consecutiveWins */\n      sload(0x00)\n        /* \"contracts/fallout.sol\":761:783  return consecutiveWins */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/fallout.sol\":337:791  function coinFlipGuess(address _my, address _coinFlipAddr) public returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/fallout.sol\":170:204  uint256 public consecutiveWins = 0 */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_28:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_30:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_31:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_45\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_30\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_32:\n        /* \"#utility.yul\":641:665   */\n      tag_47\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_48:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_33:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_50\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_7:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      dup1\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_53\n      tag_28\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":934:1053   */\n    tag_52:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_54\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_33\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_55\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_33\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1398   */\n    tag_34:\n        /* \"#utility.yul\":1358:1365   */\n      0x00\n        /* \"#utility.yul\":1387:1392   */\n      dup2\n        /* \"#utility.yul\":1376:1392   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1522   */\n    tag_35:\n        /* \"#utility.yul\":1491:1515   */\n      tag_58\n        /* \"#utility.yul\":1509:1514   */\n      dup2\n        /* \"#utility.yul\":1491:1515   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1486:1489   */\n      dup3\n        /* \"#utility.yul\":1479:1516   */\n      mstore\n        /* \"#utility.yul\":1404:1522   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1750   */\n    tag_10:\n        /* \"#utility.yul\":1621:1625   */\n      0x00\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1648:1657   */\n      dup3\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"#utility.yul\":1636:1662   */\n      swap1\n      pop\n        /* \"#utility.yul\":1672:1743   */\n      tag_60\n        /* \"#utility.yul\":1740:1741   */\n      0x00\n        /* \"#utility.yul\":1729:1738   */\n      dup4\n        /* \"#utility.yul\":1725:1742   */\n      add\n        /* \"#utility.yul\":1716:1722   */\n      dup5\n        /* \"#utility.yul\":1672:1743   */\n      tag_35\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1528:1750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1936   */\n    tag_36:\n        /* \"#utility.yul\":1804:1881   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1794:1882   */\n      mstore\n        /* \"#utility.yul\":1901:1905   */\n      0x11\n        /* \"#utility.yul\":1898:1899   */\n      0x04\n        /* \"#utility.yul\":1891:1906   */\n      mstore\n        /* \"#utility.yul\":1925:1929   */\n      0x24\n        /* \"#utility.yul\":1922:1923   */\n      0x00\n        /* \"#utility.yul\":1915:1930   */\n      revert\n        /* \"#utility.yul\":1942:2136   */\n    tag_16:\n        /* \"#utility.yul\":1982:1986   */\n      0x00\n        /* \"#utility.yul\":2002:2022   */\n      tag_63\n        /* \"#utility.yul\":2020:2021   */\n      dup3\n        /* \"#utility.yul\":2002:2022   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1997:2022   */\n      swap2\n      pop\n        /* \"#utility.yul\":2036:2056   */\n      tag_64\n        /* \"#utility.yul\":2054:2055   */\n      dup4\n        /* \"#utility.yul\":2036:2056   */\n      tag_34\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2031:2056   */\n      swap3\n      pop\n        /* \"#utility.yul\":2080:2081   */\n      dup3\n        /* \"#utility.yul\":2077:2078   */\n      dup3\n        /* \"#utility.yul\":2073:2082   */\n      sub\n        /* \"#utility.yul\":2065:2082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2104:2105   */\n      dup2\n        /* \"#utility.yul\":2098:2102   */\n      dup2\n        /* \"#utility.yul\":2095:2106   */\n      gt\n        /* \"#utility.yul\":2092:2129   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2109:2127   */\n      tag_66\n      tag_36\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2092:2129   */\n    tag_65:\n        /* \"#utility.yul\":1942:2136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2142:2322   */\n    tag_37:\n        /* \"#utility.yul\":2190:2267   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2187:2188   */\n      0x00\n        /* \"#utility.yul\":2180:2268   */\n      mstore\n        /* \"#utility.yul\":2287:2291   */\n      0x12\n        /* \"#utility.yul\":2284:2285   */\n      0x04\n        /* \"#utility.yul\":2277:2292   */\n      mstore\n        /* \"#utility.yul\":2311:2315   */\n      0x24\n        /* \"#utility.yul\":2308:2309   */\n      0x00\n        /* \"#utility.yul\":2301:2316   */\n      revert\n        /* \"#utility.yul\":2328:2513   */\n    tag_19:\n        /* \"#utility.yul\":2368:2369   */\n      0x00\n        /* \"#utility.yul\":2385:2405   */\n      tag_69\n        /* \"#utility.yul\":2403:2404   */\n      dup3\n        /* \"#utility.yul\":2385:2405   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2380:2405   */\n      swap2\n      pop\n        /* \"#utility.yul\":2419:2439   */\n      tag_70\n        /* \"#utility.yul\":2437:2438   */\n      dup4\n        /* \"#utility.yul\":2419:2439   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2414:2439   */\n      swap3\n      pop\n        /* \"#utility.yul\":2458:2459   */\n      dup3\n        /* \"#utility.yul\":2448:2483   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2463:2481   */\n      tag_72\n      tag_37\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2448:2483   */\n    tag_71:\n        /* \"#utility.yul\":2505:2506   */\n      dup3\n        /* \"#utility.yul\":2502:2503   */\n      dup3\n        /* \"#utility.yul\":2498:2507   */\n      div\n        /* \"#utility.yul\":2493:2507   */\n      swap1\n      pop\n        /* \"#utility.yul\":2328:2513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2637   */\n    tag_38:\n        /* \"#utility.yul\":2606:2630   */\n      tag_74\n        /* \"#utility.yul\":2624:2629   */\n      dup2\n        /* \"#utility.yul\":2606:2630   */\n      tag_31\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2601:2604   */\n      dup3\n        /* \"#utility.yul\":2594:2631   */\n      mstore\n        /* \"#utility.yul\":2519:2637   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2643:2865   */\n    tag_23:\n        /* \"#utility.yul\":2736:2740   */\n      0x00\n        /* \"#utility.yul\":2774:2776   */\n      0x20\n        /* \"#utility.yul\":2763:2772   */\n      dup3\n        /* \"#utility.yul\":2759:2777   */\n      add\n        /* \"#utility.yul\":2751:2777   */\n      swap1\n      pop\n        /* \"#utility.yul\":2787:2858   */\n      tag_76\n        /* \"#utility.yul\":2855:2856   */\n      0x00\n        /* \"#utility.yul\":2844:2853   */\n      dup4\n        /* \"#utility.yul\":2840:2857   */\n      add\n        /* \"#utility.yul\":2831:2837   */\n      dup5\n        /* \"#utility.yul\":2787:2858   */\n      tag_38\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2643:2865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204db6a49618c606da6ae25d498ef25776a29e33cc50f5df5c2dd478c2ce67e5f764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600080557f800000000000000000000000000000000000000000000000000000000000000060025534801561003857600080fd5b50610355806100486000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638b59565d1461003b578063e6f334d71461006b575b600080fd5b610055600480360381019061005091906101be565b610089565b6040516100629190610217565b60405180910390f35b610073610155565b6040516100809190610217565b60405180910390f35b6000806001436100999190610261565b4060001c905080600154036100ad57600080fd5b806001819055506000600254826100c491906102c4565b90506000600182146100d75760006100da565b60015b90508473ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1876040518263ffffffff1660e01b81526004016101159190610304565b600060405180830381600087803b15801561012f57600080fd5b505af1158015610143573d6000803e3d6000fd5b50505050600054935050505092915050565b60005481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018b82610160565b9050919050565b61019b81610180565b81146101a657600080fd5b50565b6000813590506101b881610192565b92915050565b600080604083850312156101d5576101d461015b565b5b60006101e3858286016101a9565b92505060206101f4858286016101a9565b9150509250929050565b6000819050919050565b610211816101fe565b82525050565b600060208201905061022c6000830184610208565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026c826101fe565b9150610277836101fe565b925082820390508181111561028f5761028e610232565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102cf826101fe565b91506102da836101fe565b9250826102ea576102e9610295565b5b828204905092915050565b6102fe81610180565b82525050565b600060208201905061031960008301846102f5565b9291505056fea26469706673582212204db6a49618c606da6ae25d498ef25776a29e33cc50f5df5c2dd478c2ce67e5f764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 DUP1 PUSH2 0x48 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B59565D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x2C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F9DAE1 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B DUP3 PUSH2 0x160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x180 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B8 DUP2 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0x15B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211 DUP2 PUSH2 0x1FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26C DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x277 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x28F JUMPI PUSH2 0x28E PUSH2 0x232 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CF DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x295 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FE DUP2 PUSH2 0x180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xB6 LOG4 SWAP7 XOR 0xC6 MOD 0xDA PUSH11 0xE25D498EF25776A29E33CC POP CREATE2 0xDF 0x5C 0x2D 0xD4 PUSH25 0xC2CE67E5F764736F6C63430008130033000000000000000000 ",
							"sourceMap": "140:654:0:-:0;;;203:1;170:34;;251:77;234:94;;140:654;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@coinFlipGuess_73": {
									"entryPoint": 137,
									"id": 73,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@consecutiveWins_10": {
									"entryPoint": 341,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2868:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "970:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:32:1"
															},
															"nodeType": "YulIf",
															"src": "934:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1063:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1107:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1190:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1235:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "886:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "897:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "909:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "917:6:1",
														"type": ""
													}
												],
												"src": "841:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1366:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1376:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1387:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1376:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1348:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1358:7:1",
														"type": ""
													}
												],
												"src": "1321:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1469:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1486:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1509:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1491:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1491:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1479:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1479:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1457:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1464:3:1",
														"type": ""
													}
												],
												"src": "1404:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1626:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1636:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1636:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1716:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1740:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1725:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1672:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1672:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1610:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1621:4:1",
														"type": ""
													}
												],
												"src": "1528:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1794:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1898:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1891:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1891:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1922:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1925:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1915:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1756:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1987:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1997:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2020:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2002:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1997:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2031:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2054:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2036:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2031:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2065:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2077:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2080:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2073:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2065:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2107:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2109:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2109:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2109:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2098:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2104:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2095:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:11:1"
															},
															"nodeType": "YulIf",
															"src": "2092:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1973:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1976:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1982:4:1",
														"type": ""
													}
												],
												"src": "1942:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2170:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2287:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2277:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2308:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2311:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2301:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2301:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2142:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2403:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2385:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2380:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2414:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2437:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2419:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2414:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2461:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "2463:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2463:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2463:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2458:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:9:1"
															},
															"nodeType": "YulIf",
															"src": "2448:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2493:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2502:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2505:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2498:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2493:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2359:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2362:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2368:1:1",
														"type": ""
													}
												],
												"src": "2328:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2584:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2601:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2624:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2606:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2606:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2594:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2594:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2572:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2579:3:1",
														"type": ""
													}
												],
												"src": "2519:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2741:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2774:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2751:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2831:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2855:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2840:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2787:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2787:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2787:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2713:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2725:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2736:4:1",
														"type": ""
													}
												],
												"src": "2643:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638b59565d1461003b578063e6f334d71461006b575b600080fd5b610055600480360381019061005091906101be565b610089565b6040516100629190610217565b60405180910390f35b610073610155565b6040516100809190610217565b60405180910390f35b6000806001436100999190610261565b4060001c905080600154036100ad57600080fd5b806001819055506000600254826100c491906102c4565b90506000600182146100d75760006100da565b60015b90508473ffffffffffffffffffffffffffffffffffffffff1663a6f9dae1876040518263ffffffff1660e01b81526004016101159190610304565b600060405180830381600087803b15801561012f57600080fd5b505af1158015610143573d6000803e3d6000fd5b50505050600054935050505092915050565b60005481565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018b82610160565b9050919050565b61019b81610180565b81146101a657600080fd5b50565b6000813590506101b881610192565b92915050565b600080604083850312156101d5576101d461015b565b5b60006101e3858286016101a9565b92505060206101f4858286016101a9565b9150509250929050565b6000819050919050565b610211816101fe565b82525050565b600060208201905061022c6000830184610208565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061026c826101fe565b9150610277836101fe565b925082820390508181111561028f5761028e610232565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006102cf826101fe565b91506102da836101fe565b9250826102ea576102e9610295565b5b828204905092915050565b6102fe81610180565b82525050565b600060208201905061031960008301846102f5565b9291505056fea26469706673582212204db6a49618c606da6ae25d498ef25776a29e33cc50f5df5c2dd478c2ce67e5f764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B59565D EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x155 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 NUMBER PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x261 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x2C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xD7 JUMPI PUSH1 0x0 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F9DAE1 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x143 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B DUP3 PUSH2 0x160 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19B DUP2 PUSH2 0x180 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B8 DUP2 PUSH2 0x192 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0x15B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x211 DUP2 PUSH2 0x1FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26C DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x277 DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x28F JUMPI PUSH2 0x28E PUSH2 0x232 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CF DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2EA JUMPI PUSH2 0x2E9 PUSH2 0x295 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FE DUP2 PUSH2 0x180 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xB6 LOG4 SWAP7 XOR 0xC6 MOD 0xDA PUSH11 0xE25D498EF25776A29E33CC POP CREATE2 0xDF 0x5C 0x2D 0xD4 PUSH25 0xC2CE67E5F764736F6C63430008130033000000000000000000 ",
							"sourceMap": "140:654:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;337:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;337:454;412:7;432:18;486:1;471:12;:16;;;;:::i;:::-;461:27;453:36;;432:57;;518:10;506:8;;:22;502:61;;543:8;;;502:61;586:10;575:8;:21;;;;607:16;639:6;;626:10;:19;;;;:::i;:::-;607:38;;656:9;680:1;668:8;:13;:28;;691:5;668:28;;;684:4;668:28;656:40;;719:13;709:36;;;746:3;709:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:15;;761:22;;;;;337:454;;;;:::o;170:34::-;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:77::-;1358:7;1387:5;1376:16;;1321:77;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:180::-;1804:77;1801:1;1794:88;1901:4;1898:1;1891:15;1925:4;1922:1;1915:15;1942:194;1982:4;2002:20;2020:1;2002:20;:::i;:::-;1997:25;;2036:20;2054:1;2036:20;:::i;:::-;2031:25;;2080:1;2077;2073:9;2065:17;;2104:1;2098:4;2095:11;2092:37;;;2109:18;;:::i;:::-;2092:37;1942:194;;;;:::o;2142:180::-;2190:77;2187:1;2180:88;2287:4;2284:1;2277:15;2311:4;2308:1;2301:15;2328:185;2368:1;2385:20;2403:1;2385:20;:::i;:::-;2380:25;;2419:20;2437:1;2419:20;:::i;:::-;2414:25;;2458:1;2448:35;;2463:18;;:::i;:::-;2448:35;2505:1;2502;2498:9;2493:14;;2328:185;;;;:::o;2519:118::-;2606:24;2624:5;2606:24;:::i;:::-;2601:3;2594:37;2519:118;;:::o;2643:222::-;2736:4;2774:2;2763:9;2759:18;2751:26;;2787:71;2855:1;2844:9;2840:17;2831:6;2787:71;:::i;:::-;2643:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "170600",
								"executionCost": "27326",
								"totalCost": "197926"
							},
							"external": {
								"coinFlipGuess(address,address)": "infinite",
								"consecutiveWins()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 203,
									"end": 204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 204,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 170,
									"end": 204,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 234,
									"end": 328,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 140,
									"end": 794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 794,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204db6a49618c606da6ae25d498ef25776a29e33cc50f5df5c2dd478c2ce67e5f764736f6c63430008130033",
									".code": [
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "8B59565D"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 337,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 337,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 170,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 337,
											"end": 791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 412,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 486,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 471,
											"end": 483,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 471,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 471,
											"end": 487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 471,
											"end": 487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 471,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 471,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 471,
											"end": 487,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 471,
											"end": 487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 461,
											"end": 488,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 453,
											"end": 489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 489,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 432,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 432,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 514,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 506,
											"end": 514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 502,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 543,
											"end": 551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 543,
											"end": 551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 502,
											"end": 563,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 575,
											"end": 596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 596,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 626,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 607,
											"end": 645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 607,
											"end": 645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 668,
											"end": 676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 668,
											"end": 681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 668,
											"end": 696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 656,
											"end": 696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 696,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 719,
											"end": 732,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "A6F9DAE1"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 709,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 709,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 709,
											"end": 750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 761,
											"end": 783,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 761,
											"end": 783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 761,
											"end": 783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 170,
											"end": 204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1491,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1491,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1722,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1672,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1672,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1936,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1756,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1905,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2002,
											"end": 2022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2036,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2056,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2106,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2129,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2092,
											"end": 2129,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2109,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2109,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2129,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2092,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2142,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2277,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2385,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2419,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2448,
											"end": 2483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2463,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2483,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2448,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2507,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2328,
											"end": 2513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2606,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2606,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2519,
											"end": 2637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2855,
											"end": 2856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2787,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2787,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/fallout.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"coinFlipGuess(address,address)": "8b59565d",
							"consecutiveWins()": "e6f334d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_my\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coinFlipAddr\",\"type\":\"address\"}],\"name\":\"coinFlipGuess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fallout.sol\":\"CoinFlipGuess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fallout.sol\":{\"keccak256\":\"0x033b485a1f260c872add9c3d18f8dcc3f52d3db1ccc5a60a7ad9cc0f7476712a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce9191732c5c3c1c904061e32fdb54f944e38963f5661acb3a33df352a7e5c44\",\"dweb:/ipfs/QmWay5cwPXcemT2NhCb5cVZobVAgXbPhgjSzFYdaLa95G6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/fallout.sol:CoinFlipGuess",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/fallout.sol:CoinFlipGuess",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 15,
								"contract": "contracts/fallout.sol:CoinFlipGuess",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "changeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"changeOwner(address)": "a6f9dae1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fallout.sol\":\"ICoinFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/fallout.sol\":{\"keccak256\":\"0x033b485a1f260c872add9c3d18f8dcc3f52d3db1ccc5a60a7ad9cc0f7476712a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce9191732c5c3c1c904061e32fdb54f944e38963f5661acb3a33df352a7e5c44\",\"dweb:/ipfs/QmWay5cwPXcemT2NhCb5cVZobVAgXbPhgjSzFYdaLa95G6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> contracts/fallout.sol:22:9:\n   |\n22 |         bool side = coinFlip == 1 ? true : false;\n   |         ^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 665,
					"file": "contracts/fallout.sol",
					"start": 656
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/fallout.sol": {
				"ast": {
					"absolutePath": "contracts/fallout.sol",
					"exportedSymbols": {
						"CoinFlipGuess": [
							74
						],
						"ICoinFlip": [
							7
						]
					},
					"id": 75,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICoinFlip",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "ICoinFlip",
							"nameLocation": "70:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a6f9dae1",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nameLocation": "96:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "116:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "107:16:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "132:0:0"
									},
									"scope": 7,
									"src": "87:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 75,
							"src": "60:76:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlipGuess",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 74,
							"linearizedBaseContracts": [
								74
							],
							"name": "CoinFlipGuess",
							"nameLocation": "149:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 10,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "185:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "170:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "203:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "219:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "211:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "242:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 74,
									"src": "234:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "234:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "251:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "421:370:0",
										"statements": [
											{
												"assignments": [
													25
												],
												"declarations": [
													{
														"constant": false,
														"id": 25,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "440:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "432:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 24,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 29,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "471:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "477:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "471:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "486:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "471:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 28,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "461:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "461:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "453:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 26,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "453:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "453:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "432:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "506:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 37,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "518:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "506:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 43,
												"nodeType": "IfStatement",
												"src": "502:61:0",
												"trueBody": {
													"id": 42,
													"nodeType": "Block",
													"src": "530:33:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 39,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "543:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "543:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 41,
															"nodeType": "ExpressionStatement",
															"src": "543:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "575:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "586:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "575:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "575:21:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "607:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "607:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 51,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "639:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "626:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "607:38:0"
											},
											{
												"assignments": [
													55
												],
												"declarations": [
													{
														"constant": false,
														"id": 55,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "661:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "656:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 54,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 62,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 56,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "668:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "680:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "668:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "691:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "668:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "684:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "656:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "_my",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "746:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 64,
																	"name": "_coinFlipAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "719:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 63,
																"name": "ICoinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "709:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICoinFlip_$7_$",
																	"typeString": "type(contract ICoinFlip)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "709:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICoinFlip_$7",
																"typeString": "contract ICoinFlip"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "734:11:0",
														"memberName": "changeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "709:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "709:41:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "consecutiveWins",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "768:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 23,
												"id": 71,
												"nodeType": "Return",
												"src": "761:22:0"
											}
										]
									},
									"functionSelector": "8b59565d",
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "coinFlipGuess",
									"nameLocation": "346:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_my",
												"nameLocation": "368:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "360:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_coinFlipAddr",
												"nameLocation": "381:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "373:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "359:36:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "412:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:9:0"
									},
									"scope": 74,
									"src": "337:454:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 75,
							"src": "140:654:0",
							"usedErrors": []
						}
					],
					"src": "33:761:0"
				},
				"id": 0
			}
		}
	}
}